//
//  ProjectVsGuideComparison.swift
//  BaseStructoriOSUIKit
//
//  Created by sahapap on 8/8/2568 BE.
//  ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏Å‡∏±‡∏ö CoordinatorGuide
//

/*
 üîç ‡πÄ‡∏õ‡∏£‡∏µ‡∏¢‡∏ö‡πÄ‡∏ó‡∏µ‡∏¢ÿ®: ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô VS CoordinatorGuide

 üì± ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏£‡∏≤ = ‡πÅ‡∏≠‡∏õ iOS ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ (Loading ‚Üí TabBar ‚Üí Features)
 üçΩÔ∏è CoordinatorGuide = ‡πÅ‡∏≠‡∏õ‡∏£‡πâ‡∏≤‡∏ô‡∏≠‡∏≤‡∏´‡∏≤‡∏£ (Menu ‚Üí Detail ‚Üí Cart ‚Üí Checkout)
*/

// MARK: - ‚úÖ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏î‡∏µ‡πÅ‡∏•‡πâ‡∏ß

/*
 üéØ 1. ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
 
 ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏£‡∏≤:
 AppCoordinator ‚Üí LoadingCoordinator ‚Üí MainCoordinator ‚Üí TabCoordinators
 
 CoordinatorGuide:
 RestaurantCoordinator ‚Üí MenuList ‚Üí FoodDetail ‚Üí Cart ‚Üí Checkout
 
 ‚úÖ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô: ‡∏•‡∏≥‡∏î‡∏±‡∏ö‡∏ä‡∏±‡πâ‡∏ô parent-child relationships
 ‚úÖ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô: ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ addChildCoordinator() ‡πÅ‡∏•‡∏∞ removeFromParent()
 ‚úÖ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô: ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Publishers ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏∑‡πà‡∏≠‡∏™‡∏≤‡∏£
*/

/*
 üéØ 2. Memory Management
 
 ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏£‡∏≤:
 - LoadingCoordinator ‡∏ñ‡∏π‡∏Å‡∏•‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à
 - MainCoordinator ‡∏≠‡∏¢‡∏π‡πà‡∏ï‡∏•‡∏≠‡∏î‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÅ‡∏≠‡∏õ
 
 CoordinatorGuide:
 - ‡πÄ‡∏Å‡πá‡∏ö coordinator ‡πÑ‡∏ß‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
 - ‡∏•‡∏ö coordinator ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å flow
 
 ‚úÖ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô: ‡∏´‡∏•‡∏±‡∏Å‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ memory
 ‚úÖ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô: ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ weak/strong references
*/

/*
 üéØ 3. Combine Integration
 
 ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏£‡∏≤:
 loadingCoordinator.loadingCompleted
     .sink { [weak self] in
         self?.showMainApp()
     }
 
 CoordinatorGuide:
 viewModel.detailRequested
     .sink { [weak self] in
         self?.showDetail()
     }
 
 ‚úÖ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô: ‡πÉ‡∏ä‡πâ Publishers ‡πÅ‡∏ó‡∏ô delegates
 ‚úÖ ‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏Å‡∏±‡∏ô: ‡∏Å‡∏≤‡∏£ subscribe ‡πÅ‡∏•‡∏∞ store ‡πÉ‡∏ô cancellables
*/

// MARK: - üîÑ ‡∏™‡∏¥‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≤‡∏á‡∏Å‡∏±‡∏ô‡πÅ‡∏•‡∏∞‡∏Ñ‡∏ß‡∏£‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á

/*
 üéØ 1. Navigation Patterns
 
 ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏£‡∏≤ (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå):
 func showTabOneDetail() {
     let tabOneCoordinator = TabOneCoordinator(navigationController: navigationController)
     addChildCoordinator(tabOneCoordinator)
     tabOneCoordinator.showDetail()
     // ‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£ subscribe ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î
     // ‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏•‡∏ö coordinator ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏£‡πá‡∏à
 }
 
 CoordinatorGuide (‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå):
 func addToCartAndGoBack(_ item: MenuItem) {
     selectedItems.append(item)
     showAlert(message: "‡πÄ‡∏û‡∏¥‡πà‡∏° \(item.name) ‡∏•‡∏á‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡πÅ‡∏•‡πâ‡∏ß!")
     popViewController()
     // ‚úÖ ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ state
     // ‚úÖ ‡∏°‡∏µ‡∏Å‡∏≤‡∏£ feedback ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
 }
*/

/*
 üéØ 2. State Management
 
 ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏£‡∏≤ (‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ):
 - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö selectedItems
 - ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö user state
 - ‡πÅ‡∏ï‡πà‡∏•‡∏∞ tab ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏¢‡∏Å‡∏Å‡∏±‡∏ô
 
 CoordinatorGuide (‡∏°‡∏µ‡∏Ñ‡∏£‡∏ö):
 private var selectedItems: [MenuItem] = []
 private var currentUser: User?
 
 ‚úÖ CoordinatorGuide ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤: ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Å‡πá‡∏ö state ‡∏Ç‡πâ‡∏≤‡∏° flow
 ‚úÖ CoordinatorGuide ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤: ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç (‡∏ï‡πâ‡∏≠‡∏á login ‡∏Å‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏°?)
*/

/*
 üéØ 3. Error Handling
 
 ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏£‡∏≤ (‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô):
 func handleLoadingError(_ error: Error) {
     showAlert(title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", message: error.localizedDescription)
 }
 
 CoordinatorGuide (‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°):
 guard !selectedItems.isEmpty else {
     showAlert(message: "‡∏£‡∏ñ‡πÄ‡∏Ç‡πá‡∏ô‡∏ß‡πà‡∏≤‡∏á‡πÄ‡∏õ‡∏•‡πà‡∏≤ üõí")
     return
 }
 
 guard canNavigate(to: "Checkout") else {
     showAlert(message: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡πà‡∏≠‡∏ô")
     showLogin()
     return
 }
 
 ‚úÖ CoordinatorGuide ‡∏î‡∏µ‡∏Å‡∏ß‡πà‡∏≤: ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡πà‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á
*/

// MARK: - üìã Action Items ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ

/*
 üöÄ 1. ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á MainCoordinator ‡πÉ‡∏´‡πâ‡∏°‡∏µ proper cleanup:
 
 func showTabOneDetail() {
     let coordinator = TabOneCoordinator(navigationController: navigationController)
     addChildCoordinator(coordinator)
     
     // ‡πÄ‡∏û‡∏¥‡πà‡∏° subscription ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏≠‡∏Å‡∏≤‡∏£‡∏õ‡∏¥‡∏î
     coordinator.detailClosed
         .sink { [weak self] in
             self?.onDetailClosed(coordinator)
         }
         .store(in: &cancellables)
     
     coordinator.showDetail()
 }
 
 private func onDetailClosed(_ coordinator: TabOneCoordinator) {
     childDidFinish(coordinator)
 }
*/

/*
 üöÄ 2. ‡πÄ‡∏û‡∏¥‡πà‡∏° State Management ‡πÉ‡∏ô MainCoordinator:
 
 class MainCoordinator: ReactiveCoordinator {
     // ‡πÄ‡∏Å‡πá‡∏ö state ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç
     private var currentUser: User?
     private var appSettings: AppSettings?
     private var tabStates: [TabState] = []
     
     func updateUserProfile(_ user: User) {
         currentUser = user
         // ‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó UI ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á
     }
 }
*/

/*
 üöÄ 3. ‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á Navigation Methods ‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö:
 
 func showModalFromTabTwo() {
     guard canShowModal() else {
         showAlert(message: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏™‡∏î‡∏á Modal ‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞‡∏ô‡∏µ‡πâ")
         return
     }
     
     let coordinator = TabTwoCoordinator(navigationController: UINavigationController())
     addChildCoordinator(coordinator)
     
     coordinator.modalClosed
         .sink { [weak self] in
             self?.onModalClosed(coordinator)
         }
         .store(in: &cancellables)
     
     presentViewController(coordinator.navigationController)
     coordinator.showModal()
 }
*/

/*
 üöÄ 4. ‡πÄ‡∏û‡∏¥‡πà‡∏° Helper Methods ‡∏ï‡∏≤‡∏° CoordinatorGuide:
 
 // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÉ‡∏ô BaseCoordinator
 func canNavigate(to destination: String) -> Bool {
     // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö permissions, network, etc.
     return true
 }
 
 func logNavigation(from source: String, to destination: String) {
     print("üß≠ Navigation: \(source) ‚Üí \(destination)")
 }
 
 func showConfirmationAlert(title: String, message: String, onConfirm: @escaping () -> Void) {
     let actions = [
         UIAlertAction(title: "‡∏ï‡∏Å‡∏•‡∏á", style: .default) { _ in onConfirm() },
         UIAlertAction(title: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å", style: .cancel)
     ]
     showActionSheet(title: title, message: message, actions: actions)
 }
*/

/*
 üìä ‡∏™‡∏£‡∏∏‡∏õ: ‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Ñ‡πÄ‡∏£‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏î‡∏µ‡πÅ‡∏•‡πâ‡∏ß ‡πÅ‡∏ï‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°:
 
 ‚úÖ ‡πÑ‡∏î‡πâ‡πÅ‡∏•‡πâ‡∏ß:
 - ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á hierarchy
 - Combine integration  
 - Dependency injection
 - Memory management ‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
 
 üîÑ ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏∏‡∏á:
 - Tab coordinator cleanup
 - State management
 - Error handling & validation
 - Helper methods ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
 
 üéØ ‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢: ‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡πÄ‡∏ó‡πà‡∏≤ CoordinatorGuide
 - Navigation flow ‡∏ó‡∏µ‡πà‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå
 - State management ‡∏ó‡∏µ‡πà‡∏î‡∏µ
 - Error handling ‡∏ó‡∏µ‡πà‡∏Ñ‡∏£‡∏≠‡∏ö‡∏Ñ‡∏•‡∏∏‡∏°
 - User experience ‡∏ó‡∏µ‡πà‡∏•‡∏∑‡πà‡∏ô‡πÑ‡∏´‡∏•
*/
